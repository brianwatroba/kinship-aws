AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    kinship

Globals:
    Function:
        Timeout: 3
        Tracing: Active
    Api:
        TracingEnabled: true

Resources:
    SendMessageFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./
            Handler: lambdas/sendMessage.sendMessageHandler
            Runtime: nodejs18.x
            Timeout: 10
            Architectures:
                - x86_64
            Events:
                SendMessageEvent:
                    Type: SQS
                    Properties:
                        Queue: !GetAtt SendMessageQueue.Arn
                        BatchSize: 1
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: es2020
                Sourcemap: true
                EntryPoints:
                    - lambdas/sendMessage.ts
                External:
                    - aws-sdk

    ReceiveMessageFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./
            Handler: lambdas/receiveMessage.receiveMessageHandler
            Runtime: nodejs18.x
            Timeout: 10
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Users
                - DynamoDBCrudPolicy:
                      TableName: Topics
                - DynamoDBReadPolicy:
                      TableName: Families
                - SQSSendMessagePolicy:
                      QueueName: send-message-queue
            Architectures:
                - x86_64
            Events:
                ReceiveMessage:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /receiveMessage
                        Method: post
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: es2020
                Sourcemap: true
                EntryPoints:
                    - lambdas/receiveMessage.ts
                External:
                    - aws-sdk

    StartTopicFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./
            Handler: lambdas/startTopic.startTopicHandler
            Runtime: nodejs18.x
            Timeout: 10
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Users
                - DynamoDBCrudPolicy:
                      TableName: Topics
                - SQSSendMessagePolicy:
                      QueueName: send-message-queue
            Architectures:
                - x86_64
            Events:
                SendMessageEvent:
                    Type: SQS
                    Properties:
                        Queue: !GetAtt StartTopicQueue.Arn
                        BatchSize: 1
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: es2020
                Sourcemap: true
                EntryPoints:
                    - lambdas/startTopic.ts
                External:
                    - aws-sdk

    GetTopicSummaryFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./
            Handler: lambdas/getTopicSummary.getTopicSummaryHandler
            Runtime: nodejs18.x
            Timeout: 10
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Users
                - DynamoDBReadPolicy:
                      TableName: Families
                - DynamoDBReadPolicy:
                      TableName: Topics
            Architectures:
                - x86_64
            Events:
                ReceiveMessage:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /getTopicSummary/{topicId}
                        Method: get
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: false
                Sourcemap: true
                Loader:
                    - .eta=file
                EntryPoints:
                    - lambdas/getTopicSummary.ts
                External:
                    - aws-sdk
    TriggerDailyTopicsFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./
            Handler: lambdas/triggerDailyTopics.triggerDailyTopicsHandler
            Runtime: nodejs18.x
            Timeout: 10
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Families
                - SQSSendMessagePolicy:
                      QueueName: start-topic-queue
            Architectures:
                - x86_64
            Events:
                ScheduledEvent:
                    Type: Schedule
                    Properties:
                        Schedule: 'cron(0 15 * * ? *)' # Trigger at 11:00AM EST, which is 3:00PM UTC (UTC is used by AWS for scheduled events)
                        Enabled: True
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: es2020
                Sourcemap: true
                EntryPoints:
                    - lambdas/triggerDailyTopics.ts
                External:
                    - aws-sdk

    TriggerTopicReminderFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./
            Handler: lambdas/triggerTopicReminder.triggerTopicReminderHandler
            Runtime: nodejs18.x
            Timeout: 10
            Policies:
                - DynamoDBReadPolicy:
                      TableName: Families
                - DynamoDBReadPolicy:
                      TableName: Topics
                - DynamoDBReadPolicy:
                      TableName: Users
                - SQSSendMessagePolicy:
                      QueueName: send-message-queue
            Architectures:
                - x86_64
            Events:
                ScheduledEvent:
                    Type: Schedule
                    Properties:
                        Schedule: 'cron(0 23 * * ? *)'
                        Enabled: True
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: es2020
                Sourcemap: true
                EntryPoints:
                    - lambdas/triggerTopicReminder.ts
                External:
                    - aws-sdk

    UsersTable:
        Type: 'AWS::DynamoDB::Table'
        Properties:
            TableName: 'Users'
            AttributeDefinitions:
                - AttributeName: 'phoneNumber'
                  AttributeType: 'S'
                - AttributeName: 'familyId'
                  AttributeType: 'S'
            KeySchema:
                - AttributeName: 'phoneNumber'
                  KeyType: 'HASH'
            BillingMode: 'PAY_PER_REQUEST'
            GlobalSecondaryIndexes:
                - IndexName: 'familyIdIndex'
                  KeySchema:
                      - AttributeName: 'familyId'
                        KeyType: 'HASH'
                      - AttributeName: 'phoneNumber'
                        KeyType: 'RANGE'
                  Projection:
                      ProjectionType: 'ALL'
    TopicsTable:
        Type: 'AWS::DynamoDB::Table'
        Properties:
            TableName: 'Topics'
            AttributeDefinitions:
                - AttributeName: 'familyId'
                  AttributeType: 'S'
                - AttributeName: 'createdAt'
                  AttributeType: 'N'
            KeySchema:
                - AttributeName: 'familyId'
                  KeyType: 'HASH'
                - AttributeName: 'createdAt'
                  KeyType: 'RANGE'
            BillingMode: 'PAY_PER_REQUEST'

    FamiliesTable:
        Type: 'AWS::DynamoDB::Table'
        Properties:
            TableName: 'Families'
            AttributeDefinitions:
                - AttributeName: 'id'
                  AttributeType: 'S'
            KeySchema:
                - AttributeName: 'id'
                  KeyType: 'HASH'
            BillingMode: 'PAY_PER_REQUEST'

    SendMessageQueue:
        Type: AWS::SQS::Queue
        Properties:
            QueueName: send-message-queue

    StartTopicQueue:
        Type: AWS::SQS::Queue
        Properties:
            QueueName: start-topic-queue
            RedrivePolicy:
                deadLetterTargetArn: !GetAtt StartTopicDeadLetterQueue.Arn
                maxReceiveCount: 3

    StartTopicDeadLetterQueue:
        Type: AWS::SQS::Queue
        Properties:
            QueueName: start-topic-dead-letter-queue

    ApplicationResourceGroup:
        Type: AWS::ResourceGroups::Group
        Properties:
            Name:
                Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
            ResourceQuery:
                Type: CLOUDFORMATION_STACK_1_0
    ApplicationInsightsMonitoring:
        Type: AWS::ApplicationInsights::Application
        Properties:
            ResourceGroupName:
                Ref: ApplicationResourceGroup
            AutoConfigurationEnabled: 'true'
# Outputs:
# ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
# Find out more about other implicit resources you can reference within SAM
# https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
# HelloWorldApi:
#     Description: API Gateway endpoint URL for Prod stage for Hello World function
#     Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/'
# HelloWorldFunction:
#     Description: Hello World Lambda Function ARN
#     Value: !GetAtt HelloWorldFunction.Arn
# HelloWorldFunctionIamRole:
#     Description: Implicit IAM Role created for Hello World function
#     Value: !GetAtt HelloWorldFunctionRole.Arn
